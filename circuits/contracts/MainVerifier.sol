// THIS FILE IS GENERATED BY HARDHAT-CIRCOM. DO NOT EDIT THIS FILE.
//
// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// 2019 OKIMS
//      ported to solidity 0.6
//      fixed linter warnings
//      added requiere error messages
//
//
// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.6.11;
library Pairing {
    struct G1Point {
        uint X;
        uint Y;
    }
    // Encoding of field elements is: X[0] * z + X[1]
    struct G2Point {
        uint[2] X;
        uint[2] Y;
    }
    /// @return the generator of G1
    function P1() internal pure returns (G1Point memory) {
        return G1Point(1, 2);
    }
    /// @return the generator of G2
    function P2() internal pure returns (G2Point memory) {
        // Original code point
        return G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );

/*
        // Changed by Jordi point
        return G2Point(
            [10857046999023057135944570762232829481370756359578518086990519993285655852781,
             11559732032986387107991004021392285783925812861821192530917403151452391805634],
            [8495653923123431417604973247489272438418190587263600148770280649306958101930,
             4082367875863433681332203403145435568316851327593401208105741076214120093531]
        );
*/
    }
    /// @return r the negation of p, i.e. p.addition(p.negate()) should be zero.
    function negate(G1Point memory p) internal pure returns (G1Point memory r) {
        // The prime q in the base field F_q for G1
        uint q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;
        if (p.X == 0 && p.Y == 0)
            return G1Point(0, 0);
        return G1Point(p.X, q - (p.Y % q));
    }
    /// @return r the sum of two points of G1
    function addition(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {
        uint[4] memory input;
        input[0] = p1.X;
        input[1] = p1.Y;
        input[2] = p2.X;
        input[3] = p2.Y;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-add-failed");
    }
    /// @return r the product of a point on G1 and a scalar, i.e.
    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.
    function scalar_mul(G1Point memory p, uint s) internal view returns (G1Point memory r) {
        uint[3] memory input;
        input[0] = p.X;
        input[1] = p.Y;
        input[2] = s;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require (success,"pairing-mul-failed");
    }
    /// @return the result of computing the pairing check
    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1
    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should
    /// return true.
    function pairing(G1Point[] memory p1, G2Point[] memory p2) internal view returns (bool) {
        require(p1.length == p2.length,"pairing-lengths-failed");
        uint elements = p1.length;
        uint inputSize = elements * 6;
        uint[] memory input = new uint[](inputSize);
        for (uint i = 0; i < elements; i++)
        {
            input[i * 6 + 0] = p1[i].X;
            input[i * 6 + 1] = p1[i].Y;
            input[i * 6 + 2] = p2[i].X[0];
            input[i * 6 + 3] = p2[i].X[1];
            input[i * 6 + 4] = p2[i].Y[0];
            input[i * 6 + 5] = p2[i].Y[1];
        }
        uint[1] memory out;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-opcode-failed");
        return out[0] != 0;
    }
    /// Convenience method for a pairing check for two pairs.
    function pairingProd2(G1Point memory a1, G2Point memory a2, G1Point memory b1, G2Point memory b2) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](2);
        G2Point[] memory p2 = new G2Point[](2);
        p1[0] = a1;
        p1[1] = b1;
        p2[0] = a2;
        p2[1] = b2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for three pairs.
    function pairingProd3(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](3);
        G2Point[] memory p2 = new G2Point[](3);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for four pairs.
    function pairingProd4(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2,
            G1Point memory d1, G2Point memory d2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](4);
        G2Point[] memory p2 = new G2Point[](4);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p1[3] = d1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        p2[3] = d2;
        return pairing(p1, p2);
    }
}
contract Verifier {
    using Pairing for *;
    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }
    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }
    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [4252822878758300859123897981450591353533073413197771768651442665752259397132,
             6375614351688725206403948262868962793625744043794305715222011528459656738731],
            [21847035105528745403288232691147584728191162732299865338377159692350059136679,
             10505242626370262277552901082094356697409835680220590971873171140371331206856]
        );
        vk.gamma2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.delta2 = Pairing.G2Point(
            [21173502052847522712343920695345049565520895905384250222105697507142194555901,
             2331074035208661256364667123862169704061449951851910379325063964198285430221],
            [1921085277078744684511176971830319952173319902281081603728474458216922605612,
             961901284356507153388088069199380552581103880001797976871193700998289486054]
        );
        vk.IC = new Pairing.G1Point[](130);
        
        vk.IC[0] = Pairing.G1Point( 
            17570961243347322484966732165258708786542412940613931683848698075330067321731,
            10672620917273637302192603471636537862469778755441170306891389861103623340527
        );                                      
        
        vk.IC[1] = Pairing.G1Point( 
            723701243584097460007739730051448207000252636761795819465030751778486156054,
            13861727068561609052291766080305006351502842289265196064800090859062975772853
        );                                      
        
        vk.IC[2] = Pairing.G1Point( 
            7315164263723840484773929852276609438135335938016887579869604868260854791196,
            5509144789586057890832762467528895967447338142666989057488382624027153146906
        );                                      
        
        vk.IC[3] = Pairing.G1Point( 
            10165402697963059213776151480148587356620902742265039087611563700616823751868,
            4309720330352501538158820044202826179678510804950073210697930562927928514210
        );                                      
        
        vk.IC[4] = Pairing.G1Point( 
            9109567149975751956449891988401300578133898066360835930537849251802580578441,
            17224048051285716739362068901944640465934943575510593432256057370248507173609
        );                                      
        
        vk.IC[5] = Pairing.G1Point( 
            21133391743434269544558384806429990063187825990244161420343720063972546053114,
            7930357855454963815914463066520181179785016311255933768924283638100677477593
        );                                      
        
        vk.IC[6] = Pairing.G1Point( 
            6959693829755065039752050630551556113399071029623869561022480598907480754578,
            13389201920706046384021461600192315115865067210336013700253396505821869630793
        );                                      
        
        vk.IC[7] = Pairing.G1Point( 
            6382666155237502256542190339209197317899327406547832212009786599291147838165,
            19109988764955508225443071787882288509847163003873294959436485128419529576748
        );                                      
        
        vk.IC[8] = Pairing.G1Point( 
            8379314017215546369390998539748455834110954960944919753000357378518535884618,
            20153030438129536284428602509261338150816933517348147521777144423472650086005
        );                                      
        
        vk.IC[9] = Pairing.G1Point( 
            15950848491651263288996503392788686200991593871608684317903516074527088909225,
            2397197045436764256643915903111686014482792168014720328695475766567554001238
        );                                      
        
        vk.IC[10] = Pairing.G1Point( 
            4941267974233456658947188318188867950010543472917847816675536104866147197644,
            5782156909042670127063289830134269124173852961315285296678838601595392438720
        );                                      
        
        vk.IC[11] = Pairing.G1Point( 
            6340360272881095520059627715226037626579771372324006693372426454439618708744,
            12253611957206907365522130760556096879873958175381504424608152956758270289883
        );                                      
        
        vk.IC[12] = Pairing.G1Point( 
            1812525056765853036644817077003639031687682325815234545954417549702081518523,
            3770840363051685456664332752381734325056621775611966383145691680992204543770
        );                                      
        
        vk.IC[13] = Pairing.G1Point( 
            9870081452134601023776181887902816176715476640215446272474459226158181928220,
            11404556473068968883534257333397694644813443764176657518605002546995652925517
        );                                      
        
        vk.IC[14] = Pairing.G1Point( 
            4990088711461096784022880259645094353494332960507869771651474402409836602860,
            14306611958104990308303661738751189752026261716489170655543032383673349565792
        );                                      
        
        vk.IC[15] = Pairing.G1Point( 
            13851023168089942398656197707354849857367227891533038569125285136665892949745,
            4845915494397078784428674123493250717088907461163303637236872370860841456749
        );                                      
        
        vk.IC[16] = Pairing.G1Point( 
            18087674698417847726794734784014668341992207005408718511838462782403108329391,
            18116408752923345474720096482675348873589326211863606427774745199552695528734
        );                                      
        
        vk.IC[17] = Pairing.G1Point( 
            14179669628852935909657088348347019789037150115145619696797523490075890988548,
            19967588423553982339400321802030870283551750470808827611079215609359421532231
        );                                      
        
        vk.IC[18] = Pairing.G1Point( 
            17705504320240308967168072897116860914572149858433290548934328737344649287213,
            12080260667718575125294428960283536587819516559254061267792942558641204896627
        );                                      
        
        vk.IC[19] = Pairing.G1Point( 
            7109742171505319935740352222889772060761314358643162704446266272571821404231,
            15815558658128336224322719308881128140344834144846295161320974735253016840134
        );                                      
        
        vk.IC[20] = Pairing.G1Point( 
            21705662680866919377641303710611638726562283000523635777728035202796403657849,
            9840772946313860114623104496626925233679333416758826498804580999554870157365
        );                                      
        
        vk.IC[21] = Pairing.G1Point( 
            18768212060865899366893412268696629794449130698577512955997393060335900443814,
            16411452927208433909121651678728645810044169267889214059292568284159045499273
        );                                      
        
        vk.IC[22] = Pairing.G1Point( 
            11842176051390609828163470760848954772334124398108629554194615158783955211689,
            11609163629258470969215110465814077924675986645001525784146238390740617332918
        );                                      
        
        vk.IC[23] = Pairing.G1Point( 
            13083428971239587930105618550263717656056175065218714783287051831517818076867,
            4559189257707810722395018087632557853997031977989492476089041097787992548650
        );                                      
        
        vk.IC[24] = Pairing.G1Point( 
            4522104331460295016087588892947735789384519308221260532433623928689895559654,
            19696596689515293334952129328127567476181539270582425836355921126888952281069
        );                                      
        
        vk.IC[25] = Pairing.G1Point( 
            4967233738643749421962329745446821001663727161412357201763118598939418935851,
            2050234031856699051578390922661291720231062631874570222881144145363997123168
        );                                      
        
        vk.IC[26] = Pairing.G1Point( 
            17208755928146965009830400744180377046323560829536600720527822769621061424027,
            597868953377947436205195692617059176464389668422274206214589715866775453906
        );                                      
        
        vk.IC[27] = Pairing.G1Point( 
            2967217319012738291166685676336651316988135465072109977238822030894264943746,
            4041398084162317909464497447967571279352348128384269357049961646491788841732
        );                                      
        
        vk.IC[28] = Pairing.G1Point( 
            18272526244588344015887836153262511604546177237620839456783675706971570896628,
            9147281640761738892608548019789555118027541559595584615400000666882120320439
        );                                      
        
        vk.IC[29] = Pairing.G1Point( 
            18400274002470375705228417958335377605720585670318639432364083880097189719856,
            14844719786504381214072310768307113571629210800758629817573989360984369585495
        );                                      
        
        vk.IC[30] = Pairing.G1Point( 
            17890672175598263262896681417980652199489215972777840690700335855264216385210,
            9048925935697032024130643029390592005955950862368488456305475616736346212980
        );                                      
        
        vk.IC[31] = Pairing.G1Point( 
            12278246878104895655036571991963057405377126509428130641026888707718449084619,
            10843003772328457725075643749475095403484479009550348378807880609293081562764
        );                                      
        
        vk.IC[32] = Pairing.G1Point( 
            5468162951813886939344926960881618306748612480178419503471750257269751999617,
            20053619551794259081729526433899029014875948934392835183518015621340349094939
        );                                      
        
        vk.IC[33] = Pairing.G1Point( 
            1390947093511350830095728757055873713061128886783809720027375701670181225651,
            18673384476584006859418311511040274693698408304470351270808223028662265732056
        );                                      
        
        vk.IC[34] = Pairing.G1Point( 
            10633844019747722352835153071096127432408598855657200617953367241388493942763,
            15640495359384681994650361432777643860278773962581289720180365540922058305407
        );                                      
        
        vk.IC[35] = Pairing.G1Point( 
            8359267723529989058422708609935693920707836670057390022303138953754376785932,
            12095485064909131571446282942548209767523345673250664773299925988331162641611
        );                                      
        
        vk.IC[36] = Pairing.G1Point( 
            12288515906219167377692965646207274412121276281635346915280660058056582930780,
            13280522661393828841700696619768955017795704427698470643916287070859204855913
        );                                      
        
        vk.IC[37] = Pairing.G1Point( 
            4183865765697129032308223750997765846371287329726704809661674328408924768648,
            19957386055228669622071284911194230435195244646046985171346500365950299934199
        );                                      
        
        vk.IC[38] = Pairing.G1Point( 
            21135996742299220643581851087763374378150532214526629443422951042880230104413,
            19448062721350446470289758575317788755262324481743581643203104878486195441562
        );                                      
        
        vk.IC[39] = Pairing.G1Point( 
            21564850184799666388954292190981492857894088087407747126499418682212298437138,
            18256854171927923689418467620278728156993858552100885155115542555198869950101
        );                                      
        
        vk.IC[40] = Pairing.G1Point( 
            11539259815332382111666764091508175247611479089711910585003345610852691381329,
            15908328486283766073873083319568379017924407382603485937237423258207417529383
        );                                      
        
        vk.IC[41] = Pairing.G1Point( 
            11981075795735633509138214792958308540754221008917955463689920475490467377298,
            4199030239406094153880342998132905479130968209002340538597646055153886798641
        );                                      
        
        vk.IC[42] = Pairing.G1Point( 
            6046485197029132181933249725714925996129034177223678246684355749635617458076,
            13873958726852569330912416119137120281169900233891302102830911633749675295567
        );                                      
        
        vk.IC[43] = Pairing.G1Point( 
            12076844098061577050461866682078293097302039956028417848297325478457225229479,
            15189036582150721742145683711280815445053300046946152000161221484521852686887
        );                                      
        
        vk.IC[44] = Pairing.G1Point( 
            21196386163044113231050088493819494481156066969543071340299260651898868281740,
            4252948301434465802262187579831927397534415181231472338474878616729097967656
        );                                      
        
        vk.IC[45] = Pairing.G1Point( 
            7822001446018110076188930509969015933616172994453969529579407266312464815940,
            3638586093861144864261000481036941681478836930380539315477348951279208154900
        );                                      
        
        vk.IC[46] = Pairing.G1Point( 
            12438998024094660229289163123127257493774205144459559167146230268143636433712,
            12241102911403760156953200572717435343067966799667083009089290026740512394033
        );                                      
        
        vk.IC[47] = Pairing.G1Point( 
            1417467025991617070135694795147084741382989816436558300725851935029530790556,
            3453033115381938298124491446246192577472771583418513092818734075429269398685
        );                                      
        
        vk.IC[48] = Pairing.G1Point( 
            20487393167758302461925470276864403814723494686472613439965028571983023960161,
            12190102237134283286023859095827078336353156980209617329418660585178786322915
        );                                      
        
        vk.IC[49] = Pairing.G1Point( 
            1306098182446362980910185412786434053090536677435045318531359253212427282977,
            18282777630749151234497109138557348025560514738904792942933662643530959277452
        );                                      
        
        vk.IC[50] = Pairing.G1Point( 
            9503933625707976600706146349870683117459311024566839035398690995676888974939,
            12993621144721935409236362018315611250411297912280346481419677604617224375717
        );                                      
        
        vk.IC[51] = Pairing.G1Point( 
            17212264728365378968008488832129328842100066866794950962538798684344737389905,
            2115996511266380416969016265447940399690968753500618411355876022189367224482
        );                                      
        
        vk.IC[52] = Pairing.G1Point( 
            9875582746842760698384641162189960007409273146846349259561545766621118158895,
            15160691711167411477875872327252450807748618658919313927566962617925192495197
        );                                      
        
        vk.IC[53] = Pairing.G1Point( 
            14795660058813614678551516162755981208622067651435093279654978941211069811357,
            2334634556061486520515185177607902438051652222140110020295621780207415746666
        );                                      
        
        vk.IC[54] = Pairing.G1Point( 
            18780851740218791125602146472337488893169656134548651423052110783947526542839,
            16257022966538537308917862736406496907652388444981320501430207754984268432142
        );                                      
        
        vk.IC[55] = Pairing.G1Point( 
            18326674652305704350146298125653756140273181021447764954725163273326727517421,
            178927583583234377640821997560420033410269522540331359926082277255432270963
        );                                      
        
        vk.IC[56] = Pairing.G1Point( 
            11916019982995158331140766860566140520722062310139073852421399066806836311932,
            9525882094349372246390817925957954183159063874858073458819773622768321712517
        );                                      
        
        vk.IC[57] = Pairing.G1Point( 
            19122540764813156032391092627457241604938379833800698888068594510150582182743,
            9823774628391633969239826764582981378072623878221859582647718022788117470007
        );                                      
        
        vk.IC[58] = Pairing.G1Point( 
            1304071134672935154186344168833150135510211247326724265801330360901814349998,
            3808200617840202542790455753008864785955742426673003815589028385953449237932
        );                                      
        
        vk.IC[59] = Pairing.G1Point( 
            18193247089906865234793301032526985686284059319511941558456994834222122707322,
            16978573613670693841629225967843758964491676375954420898727694062293114972368
        );                                      
        
        vk.IC[60] = Pairing.G1Point( 
            1498942533256643994348229274101592170930022257178170482786215454470267655752,
            2132810904805993458324160240413549804732185488031140715672353451821261519292
        );                                      
        
        vk.IC[61] = Pairing.G1Point( 
            14299736291802763317096179240008199286960943816120968304026084174268081329823,
            5607303386194953968940573708646302219027048332859436726820854822005512760962
        );                                      
        
        vk.IC[62] = Pairing.G1Point( 
            15769616608214897028875306427176070730121448233823509061905628118420076588212,
            18760120520245655105906580749151729133507485895352782323530260288085286952215
        );                                      
        
        vk.IC[63] = Pairing.G1Point( 
            4228273921553486253181655695701052035639876443549754474365237625210025828649,
            21416751595014754946586115064820325030171109485923561385323522262969571117163
        );                                      
        
        vk.IC[64] = Pairing.G1Point( 
            19572216918329056569620328801278410694123581696163324952316321523050609889919,
            15681472720548218140686083980635919860558034942416114340066405677539254192812
        );                                      
        
        vk.IC[65] = Pairing.G1Point( 
            10044764345853214514907664352379386991688726443831656275137740564648329428641,
            15857237084357150497356991971855651661567546499302335863323769648659020830621
        );                                      
        
        vk.IC[66] = Pairing.G1Point( 
            7065858275386033489800486305652659927686315357505556613150581712412817193164,
            16330298090988438962854569147342743232725430788340201575753776682994299933183
        );                                      
        
        vk.IC[67] = Pairing.G1Point( 
            2313010928345767148456723447946894643090631076322794396950517383466469535849,
            14261028874859201311284515392759340547463276110113024695502862023317214696316
        );                                      
        
        vk.IC[68] = Pairing.G1Point( 
            9320926204624375081050762946322647585591323343095118725560717907018768615265,
            15068135867607982895140197502541388192508389175817707361371776295339457885211
        );                                      
        
        vk.IC[69] = Pairing.G1Point( 
            13079880008955347577653796016210247698837567202002169707859383764037313846801,
            17948295237288101184459151256655729859357021189594447659514346981317835551562
        );                                      
        
        vk.IC[70] = Pairing.G1Point( 
            13097187663663353118904788091968925940229447697743462880859707767395732282509,
            5633978890586160383036096976735092957236349948440707056253192601939992662168
        );                                      
        
        vk.IC[71] = Pairing.G1Point( 
            19394492649753812132404552037832063481579014384860032440164298029514776430977,
            7987477383208847260791953138467456718345974515784517152592983852438032675591
        );                                      
        
        vk.IC[72] = Pairing.G1Point( 
            18910850140051786967504014021986437805464176964512904411193782085018955876554,
            10416064402473393214069439480264667785292537342222464400014794286303185192669
        );                                      
        
        vk.IC[73] = Pairing.G1Point( 
            5691954334094336778221013437039828686882960944741383690492892945858407894237,
            11922240407029378864547618743138349547325220074764980489562345037688542577955
        );                                      
        
        vk.IC[74] = Pairing.G1Point( 
            6637817192512354292553519731011287068823489461329723502025062133149758658541,
            9537481423812951716240763065569227752095581045435264193805572220786626588026
        );                                      
        
        vk.IC[75] = Pairing.G1Point( 
            9971780557833510481006757333220144768990050138451933920646660497954392723475,
            18119964845024103580771115250006351062654055297106655563854526966307136219900
        );                                      
        
        vk.IC[76] = Pairing.G1Point( 
            13563458825906307476671269204095087525124566754278843970583996733602785291596,
            11879021176547653026291540674579822983511424537852435996986304909471633423797
        );                                      
        
        vk.IC[77] = Pairing.G1Point( 
            10432772652181369374265346321256496703901512162606199949220207942730668438186,
            2316741536374792735546837942319721210016867792025387660847459591845218544263
        );                                      
        
        vk.IC[78] = Pairing.G1Point( 
            9910048447484989124014125753446675299018072504937811386613757577317952806204,
            7482880212801266309421429145391363682173652127063977382479071469842964004558
        );                                      
        
        vk.IC[79] = Pairing.G1Point( 
            8490836452491628532063760905012672175300231767177959055765850873382546321925,
            19996219440696354137022098186380055278187623948286899517213160920998910101406
        );                                      
        
        vk.IC[80] = Pairing.G1Point( 
            17368437459594867511783052851732503434658503271679350797307508202818590050366,
            8938213067860853088761125490947595879151040498645392540148071305631059928999
        );                                      
        
        vk.IC[81] = Pairing.G1Point( 
            19584230340080176422289926656917443695765135669966008817585828239188510941120,
            21633143590182191655079471775142274379882161040749606824370956838505605175757
        );                                      
        
        vk.IC[82] = Pairing.G1Point( 
            12293687002583468395262396048259964575329568572930678365436575400391613603619,
            18952630708365508278291081682859919461704744632442021520583917268682576129645
        );                                      
        
        vk.IC[83] = Pairing.G1Point( 
            12521692170395594915459868614597610889691078259346733342195248261869717927881,
            15366678816804023331035937664970475045149886033037946114034248941584269088401
        );                                      
        
        vk.IC[84] = Pairing.G1Point( 
            4571545126621754426592624187737032088266423754366862474955525297878416610639,
            6309932951080835814905246605283587525748901874884622787848115578349549799484
        );                                      
        
        vk.IC[85] = Pairing.G1Point( 
            1053394192201816108505275352754478476771243735909031696640069270348446360405,
            3583481209083830002120899694935101591961546728102591762466645989308068984717
        );                                      
        
        vk.IC[86] = Pairing.G1Point( 
            332594954398144278939569343097530679577888688872452620791292066519574997851,
            12976581760104750472576345474009375261622139628442611007819307154429480432663
        );                                      
        
        vk.IC[87] = Pairing.G1Point( 
            9201556622367188925830496035168614657004981640556576817800881271677092883924,
            709735742540214150476888271761718227461260338175766163511273232545206901116
        );                                      
        
        vk.IC[88] = Pairing.G1Point( 
            215583164384573279888522088387565180759433940324494940177968396173037631343,
            7248172969566605365764789727411891279155039318512094218939776592200771358881
        );                                      
        
        vk.IC[89] = Pairing.G1Point( 
            10634297724871146665133279583282759178504962271755938541720450050485088166833,
            18048956766196926004598223332255087390807169227810412818375273663358351610313
        );                                      
        
        vk.IC[90] = Pairing.G1Point( 
            11692060663821673665551311851629719960035681087118844473389734834582225387683,
            16351555919465768165814826725980619736504121169843091603892010804659790036340
        );                                      
        
        vk.IC[91] = Pairing.G1Point( 
            16526962510101622834586509991252089572705053679401999924326960695186258698222,
            11113289151407248116089505211211971088831897939515499167093012519306195873153
        );                                      
        
        vk.IC[92] = Pairing.G1Point( 
            18437521640068900882056616615750820614775623210912880395420166422549049875700,
            534334248914824226382157609549434389163131688709139710669706771727142029115
        );                                      
        
        vk.IC[93] = Pairing.G1Point( 
            14244707589587830515273421208836074738939953830172416707126103974657731996048,
            4896915686283467005475607328541367476675608312998381106387685169472850144670
        );                                      
        
        vk.IC[94] = Pairing.G1Point( 
            3523334897126192905933431318993866829221697277275253984737238296703181624958,
            17130908024706104202505962199017973332607578961170411430792074976727806213334
        );                                      
        
        vk.IC[95] = Pairing.G1Point( 
            3566948411731139276019012399590823129299802956645252033683002064147818367970,
            6291328471805156407896064530159901984294339576240886986102434159619330044644
        );                                      
        
        vk.IC[96] = Pairing.G1Point( 
            20803970113238309789007087191792540400616414846881004499242089096042048731164,
            7274737601195500134219367977008565137792223234060242368911393606696204421072
        );                                      
        
        vk.IC[97] = Pairing.G1Point( 
            3603625517520692994875608365347956183519810168073893177304736440317430193017,
            5979022401469755171366106677927068509846016912723785722998185581696703121153
        );                                      
        
        vk.IC[98] = Pairing.G1Point( 
            7355631314097749385068944074708090292467408162973797304888565896525128114265,
            16142609466616835300102002922606386906976591933556810912844060740472059122072
        );                                      
        
        vk.IC[99] = Pairing.G1Point( 
            5790805701647067708980827707765212062852761499016790168686457489503954014845,
            18760712375853504202088599681533756791981483455354208321995910838501568413500
        );                                      
        
        vk.IC[100] = Pairing.G1Point( 
            14290922621120893872088489661297619487278997755749954724734552185242470556987,
            108952580856110196606978910892508589665772195122832595317466991276858021577
        );                                      
        
        vk.IC[101] = Pairing.G1Point( 
            18998044884538716013801982227888408643941246786056907906606267071273702445439,
            15108134007750614634573563200683546590902480138676995330354581672221761427659
        );                                      
        
        vk.IC[102] = Pairing.G1Point( 
            9472412983936138089811303751449985828313284692449792643672278156130743181645,
            18489367553273176321482541683726009591786221423182268406253954298931621267510
        );                                      
        
        vk.IC[103] = Pairing.G1Point( 
            19459572841224959577587842352608943946493730998541341497560671273221721894044,
            10022756420792135014635940836777400707593159300230661934707068036681698647591
        );                                      
        
        vk.IC[104] = Pairing.G1Point( 
            4224687602530709557573814400021968949936853168198797194455995460958440206120,
            16324543682830529163290307198821155632383652856319861967605316114142813963334
        );                                      
        
        vk.IC[105] = Pairing.G1Point( 
            16580844107438399148408289340887125383861553091958808318432569683737853512523,
            7129505111694361162348611053621262886163258825248403259230514105498325023852
        );                                      
        
        vk.IC[106] = Pairing.G1Point( 
            3089290298388372016255103884877801992294181480958577883807268850723777348368,
            3230191596246303294042333032677271765028151982378005044091968555368024583102
        );                                      
        
        vk.IC[107] = Pairing.G1Point( 
            15104034523208342924157742727180627940048843039891522542013565577246168904198,
            8997854601156608804189114431751600454152383864476603333799695158692296383741
        );                                      
        
        vk.IC[108] = Pairing.G1Point( 
            7545049108644596358595762643569235306895323914144439309836471565350458216875,
            8415679994999850866792974392253689996243127406572022708819655574672016761268
        );                                      
        
        vk.IC[109] = Pairing.G1Point( 
            21821239551912592929111428826401193355017765543244320915900711565379830381813,
            13416724553776983840816382737053656374045597440427550192412224056892289012046
        );                                      
        
        vk.IC[110] = Pairing.G1Point( 
            13392850509263333189658923992577659431431632574857479504029494910525774928717,
            20798236349901404558341583602248604999103866298638537077335837966892093659458
        );                                      
        
        vk.IC[111] = Pairing.G1Point( 
            18234895547186180737683253150071691916935215913970332798424586318902679462783,
            696574316886706851365753465029808228042245888040608957438528036585870911409
        );                                      
        
        vk.IC[112] = Pairing.G1Point( 
            3949738187915682862778781000630508722043483594505071087476686445303672051404,
            14860305699904199324411420436312096812761098599547446472063860257016630331670
        );                                      
        
        vk.IC[113] = Pairing.G1Point( 
            2772095880784577775426650982299689726347409492182587133260429548374266690836,
            7681559123485055979145733233968230855926780155672533766318274165592556745030
        );                                      
        
        vk.IC[114] = Pairing.G1Point( 
            12177935387151831383515935454011675551301948152179477486279610967040550239723,
            13718256284652142285680214567796981902616215031849853620579729883668891470300
        );                                      
        
        vk.IC[115] = Pairing.G1Point( 
            14127610561646196712002858247572388575117056395639887074277444172113189648788,
            7174286277033001756193956653272906219799812819686087591578341544081787560556
        );                                      
        
        vk.IC[116] = Pairing.G1Point( 
            4849918147384476984510055316146442454109506794227703828935696040746859603848,
            11353437360624793956778249548326152234112297313012935907201103098137058709610
        );                                      
        
        vk.IC[117] = Pairing.G1Point( 
            18629019843276742326223369604849889669833643563857065687656618825108123610237,
            18135407540244062708227477854137075129946885878628237585927664538380563651096
        );                                      
        
        vk.IC[118] = Pairing.G1Point( 
            2186807211004984494531158677926601298263678670548199124373138962947953439759,
            6688870068703588504816538933445497616714958633552477647630176915855940347337
        );                                      
        
        vk.IC[119] = Pairing.G1Point( 
            17974269584389793864901190853130924087717994267984321763437782961697497220616,
            18958615373669869465019436810385830785619024626214362826233577176384977480866
        );                                      
        
        vk.IC[120] = Pairing.G1Point( 
            8205646335694033649673716424520599619628736406526092714228812258037557760000,
            8288041589296327600147463357787793957204288280542022144000145170087117047811
        );                                      
        
        vk.IC[121] = Pairing.G1Point( 
            21651933986219753388808680822017859041848343209605420208853294301895626311763,
            9995113391510109834094826320044733368596190684660867318466854239115950675721
        );                                      
        
        vk.IC[122] = Pairing.G1Point( 
            20066017276518603936007765358024567323175853593577378740436401312845886313947,
            13533054930710652598234559184625039221049475813160152366616187121369136858324
        );                                      
        
        vk.IC[123] = Pairing.G1Point( 
            18709682359701423267158596082587371174517865594682511128745717725305012575317,
            8939018509573834523951859559863147808958623225443645500157907495549590999753
        );                                      
        
        vk.IC[124] = Pairing.G1Point( 
            17991186394653121329290129614771662053903545879620459311482829492956255285396,
            19741779501036342445564946453075303278746509870816382485982859605379719109010
        );                                      
        
        vk.IC[125] = Pairing.G1Point( 
            19139950754904658235406874604542735329267189902023366376643847701922374295283,
            8542485282869540032255036511863516611572792877428358158870977501072138520341
        );                                      
        
        vk.IC[126] = Pairing.G1Point( 
            7843158918467059859641766055305888174170166318969676354566877667686545762651,
            20920978633633092128598893347126690001515252362367917170892694333055073006049
        );                                      
        
        vk.IC[127] = Pairing.G1Point( 
            1094118656574410329395691040831571202813236836521336531766197783563124744635,
            11410156501673879070020570220124574228918999276541467917429825667136553397445
        );                                      
        
        vk.IC[128] = Pairing.G1Point( 
            11411701720223501077852570264590569262690586569786679925579823687531812917037,
            10237185988660888507453966580978556584434930857623943403597960000553024530305
        );                                      
        
        vk.IC[129] = Pairing.G1Point( 
            8304188060567978978927286400648484598442191136038773212519460787439988112484,
            1875123603892304828274401779088638900524599279412149589713064661760668736592
        );                                      
        
    }
    function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        VerifyingKey memory vk = verifyingKey();
        require(input.length + 1 == vk.IC.length,"verifier-bad-input");
        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        for (uint i = 0; i < input.length; i++) {
            require(input[i] < snark_scalar_field,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));
        }
        vk_x = Pairing.addition(vk_x, vk.IC[0]);
        if (!Pairing.pairingProd4(
            Pairing.negate(proof.A), proof.B,
            vk.alfa1, vk.beta2,
            vk_x, vk.gamma2,
            proof.C, vk.delta2
        )) return 1;
        return 0;
    }
    /// @return r  bool true if proof is valid
    function verifyProof(
            uint[2] memory a,
            uint[2][2] memory b,
            uint[2] memory c,
            uint[129] memory input
        ) public view returns (bool r) {
        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);
        uint[] memory inputValues = new uint[](input.length);
        for(uint i = 0; i < input.length; i++){
            inputValues[i] = input[i];
        }
        if (verify(inputValues, proof) == 0) {
            return true;
        } else {
            return false;
        }
    }
}
