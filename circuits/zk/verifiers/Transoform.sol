//
// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// 2019 OKIMS
//      ported to solidity 0.6
//      fixed linter warnings
//      added requiere error messages
//
//
// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.6.11;
library Pairing {
    struct G1Point {
        uint X;
        uint Y;
    }
    // Encoding of field elements is: X[0] * z + X[1]
    struct G2Point {
        uint[2] X;
        uint[2] Y;
    }
    /// @return the generator of G1
    function P1() internal pure returns (G1Point memory) {
        return G1Point(1, 2);
    }
    /// @return the generator of G2
    function P2() internal pure returns (G2Point memory) {
        // Original code point
        return G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );

/*
        // Changed by Jordi point
        return G2Point(
            [10857046999023057135944570762232829481370756359578518086990519993285655852781,
             11559732032986387107991004021392285783925812861821192530917403151452391805634],
            [8495653923123431417604973247489272438418190587263600148770280649306958101930,
             4082367875863433681332203403145435568316851327593401208105741076214120093531]
        );
*/
    }
    /// @return r the negation of p, i.e. p.addition(p.negate()) should be zero.
    function negate(G1Point memory p) internal pure returns (G1Point memory r) {
        // The prime q in the base field F_q for G1
        uint q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;
        if (p.X == 0 && p.Y == 0)
            return G1Point(0, 0);
        return G1Point(p.X, q - (p.Y % q));
    }
    /// @return r the sum of two points of G1
    function addition(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {
        uint[4] memory input;
        input[0] = p1.X;
        input[1] = p1.Y;
        input[2] = p2.X;
        input[3] = p2.Y;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-add-failed");
    }
    /// @return r the product of a point on G1 and a scalar, i.e.
    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.
    function scalar_mul(G1Point memory p, uint s) internal view returns (G1Point memory r) {
        uint[3] memory input;
        input[0] = p.X;
        input[1] = p.Y;
        input[2] = s;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require (success,"pairing-mul-failed");
    }
    /// @return the result of computing the pairing check
    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1
    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should
    /// return true.
    function pairing(G1Point[] memory p1, G2Point[] memory p2) internal view returns (bool) {
        require(p1.length == p2.length,"pairing-lengths-failed");
        uint elements = p1.length;
        uint inputSize = elements * 6;
        uint[] memory input = new uint[](inputSize);
        for (uint i = 0; i < elements; i++)
        {
            input[i * 6 + 0] = p1[i].X;
            input[i * 6 + 1] = p1[i].Y;
            input[i * 6 + 2] = p2[i].X[0];
            input[i * 6 + 3] = p2[i].X[1];
            input[i * 6 + 4] = p2[i].Y[0];
            input[i * 6 + 5] = p2[i].Y[1];
        }
        uint[1] memory out;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-opcode-failed");
        return out[0] != 0;
    }
    /// Convenience method for a pairing check for two pairs.
    function pairingProd2(G1Point memory a1, G2Point memory a2, G1Point memory b1, G2Point memory b2) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](2);
        G2Point[] memory p2 = new G2Point[](2);
        p1[0] = a1;
        p1[1] = b1;
        p2[0] = a2;
        p2[1] = b2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for three pairs.
    function pairingProd3(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](3);
        G2Point[] memory p2 = new G2Point[](3);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for four pairs.
    function pairingProd4(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2,
            G1Point memory d1, G2Point memory d2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](4);
        G2Point[] memory p2 = new G2Point[](4);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p1[3] = d1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        p2[3] = d2;
        return pairing(p1, p2);
    }
}
contract Verifier {
    using Pairing for *;
    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }
    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }
    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [4252822878758300859123897981450591353533073413197771768651442665752259397132,
             6375614351688725206403948262868962793625744043794305715222011528459656738731],
            [21847035105528745403288232691147584728191162732299865338377159692350059136679,
             10505242626370262277552901082094356697409835680220590971873171140371331206856]
        );
        vk.gamma2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.delta2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.IC = new Pairing.G1Point[](129);
        
        vk.IC[0] = Pairing.G1Point( 
            10062966567031069054597705773822037502831660789434410157462853816534241844003,
            14518860494355232084054872460168232386084565518158627324896504989145353782528
        );                                      
        
        vk.IC[1] = Pairing.G1Point( 
            3975923253654690052251575543384241405242923129264755346018164937694128468590,
            3768904435683702683276844174876067706506876658172642967520411077745150126985
        );                                      
        
        vk.IC[2] = Pairing.G1Point( 
            8402239543682753064485476731365857057702341351634054425610450147007830653585,
            13793322686978014310816903024572340719448146714374658467832688321656159280595
        );                                      
        
        vk.IC[3] = Pairing.G1Point( 
            8808877110446867424573023800995009585078367647371946649303620718174957555026,
            12101887839693661949998014363741211085653156084151005211080149410775325078492
        );                                      
        
        vk.IC[4] = Pairing.G1Point( 
            6155097648752469301218457925094008713693132974304502906648217361895497516057,
            1195980260416142259719387910934976555169207893361081039725585038882905424943
        );                                      
        
        vk.IC[5] = Pairing.G1Point( 
            9829644984939618243592759487897421741051425191386332819802821869653011722130,
            4041554853324300597540048259120580598225982554306029887148545609351437324848
        );                                      
        
        vk.IC[6] = Pairing.G1Point( 
            16600945563139632325405893978427511756257997542706992322057384153877747665525,
            11356990617533789738469071122465315970551127705184990430011890148212445844713
        );                                      
        
        vk.IC[7] = Pairing.G1Point( 
            14856025889884987576794126008306968276237410716986963623217555697884537683874,
            8734208527300152993119126558508552655062285590828845718555565627228492021250
        );                                      
        
        vk.IC[8] = Pairing.G1Point( 
            10380730457067673361731960167230444224539021538224505297062480780372347375708,
            5447784238108163901424143735405008433345904289488876875188576096853378194594
        );                                      
        
        vk.IC[9] = Pairing.G1Point( 
            20863030333736572393122753645824764544504444623381354122083470118045545280279,
            19146294713108926770438113619467800780825013401481044725412157278036944929032
        );                                      
        
        vk.IC[10] = Pairing.G1Point( 
            15975819896935260337720933508550202770905818272763743162334797821666845518331,
            5013314780311595967374590385499057274643718107441303623899663335851210138235
        );                                      
        
        vk.IC[11] = Pairing.G1Point( 
            3091446310609921620644058521341785000880067737536024006884203109121085159723,
            853020070748428636787083852128010774157486647894095678100754531391383723835
        );                                      
        
        vk.IC[12] = Pairing.G1Point( 
            16760966186531390050747207266279554432152349845930571021894638104990158241008,
            3637680751149811305064253620468166036221441755638873696327550095029827862129
        );                                      
        
        vk.IC[13] = Pairing.G1Point( 
            16871111525298233873685791214149049296192114011938647698152322770078544240214,
            6842868773153672003389610323045130676295069009327148164601246734363887836292
        );                                      
        
        vk.IC[14] = Pairing.G1Point( 
            19922839972334855372882969864583673795499397354955757741919034061569160186490,
            14938680769619259108813163735602275798832545048134606568309489853041338735802
        );                                      
        
        vk.IC[15] = Pairing.G1Point( 
            18285084830648697865939419698108799586459942440183635205710603045397011231618,
            21589796429951973520633627730821539840438948093054986499966863470060206849833
        );                                      
        
        vk.IC[16] = Pairing.G1Point( 
            10728889450339948897458756574671053771273828770833289640446657868115291345135,
            16618110679172379325972064759679455757431367297679704569093936343909200341115
        );                                      
        
        vk.IC[17] = Pairing.G1Point( 
            12072124793683031956862821923369118458891799747634243491239371298436711170999,
            12570665427071552143231597330045005705002754533048229702783453960287524872026
        );                                      
        
        vk.IC[18] = Pairing.G1Point( 
            15853627642906331165144413016713006442709147140263138109628272383397081513271,
            8166905441483993812923108006051817070212055033121685473841267639837562959843
        );                                      
        
        vk.IC[19] = Pairing.G1Point( 
            14755552333197319634987684532588952393290759228978745182973350813565909993096,
            10239560341762415896568977966455898891815660246667527040360786202971627594662
        );                                      
        
        vk.IC[20] = Pairing.G1Point( 
            14434397291441508322269632065394101766573235545269131580886390839189989737302,
            10099124347435552305462021871842798194612032950411252950750379782547988107120
        );                                      
        
        vk.IC[21] = Pairing.G1Point( 
            12549594930853328418314150409650935165811958589884804914839673248146202519954,
            20998621097002748896947855495933997879618373749775886713164050190597699882386
        );                                      
        
        vk.IC[22] = Pairing.G1Point( 
            12068560126998677400926017283223811308067307099640591832562758961397948374716,
            21024397242423222178774360430126201951342333654547268501269990025546992841105
        );                                      
        
        vk.IC[23] = Pairing.G1Point( 
            5562089664095917665033023857007179244709427963220783730525524352938413091404,
            11462410765971642353316730248366214654401393318565946566378910293813265904712
        );                                      
        
        vk.IC[24] = Pairing.G1Point( 
            16947685654538979767332359280662908715673201265761864736574784110044042598754,
            21736768445832723087176655873308769167126696737914544150866677099285635908617
        );                                      
        
        vk.IC[25] = Pairing.G1Point( 
            1299876169531366768458853464508101123364768152636319534060251728142563785070,
            4245093301537569357953626669382095911652378130228370639270899386020702000066
        );                                      
        
        vk.IC[26] = Pairing.G1Point( 
            18067630549920091599569220062702077370732495844753334992716653486115389308943,
            7197683816831292987732752555299520441153845860576025540147499517871972866252
        );                                      
        
        vk.IC[27] = Pairing.G1Point( 
            15703723261466824012739969230452943691892358344127403898157446616180826055396,
            20904649532841895423269769845245718688561506190050413983600761930957619826068
        );                                      
        
        vk.IC[28] = Pairing.G1Point( 
            17271497390864379323208938443389275320054991386154740983069337238868126901700,
            555120935756418462415385503770922205977352604038180786529779924047155300774
        );                                      
        
        vk.IC[29] = Pairing.G1Point( 
            10861421947151500206837190205080158868825915141880427933286536881080121878672,
            1328688146239397871626633198997129190616889986043182642778233499217327698820
        );                                      
        
        vk.IC[30] = Pairing.G1Point( 
            11355117211178709931171151951566167597401459627328977049464554890819042442851,
            15772917667487289007513125895697448157269956056312742209021054477626836656873
        );                                      
        
        vk.IC[31] = Pairing.G1Point( 
            3624412346507899285010798470718427244842189601283347268524461233848384939674,
            21006972179521044054454712273998803912701901529714926011839457435098001361966
        );                                      
        
        vk.IC[32] = Pairing.G1Point( 
            3763183985655940226841513986527227824857328604602534060084430134215072308978,
            7565099383190733438531793280407331187822443936350615079949723596760965250814
        );                                      
        
        vk.IC[33] = Pairing.G1Point( 
            20259429338431419430763298611446440325676626354889075750065425542092165403486,
            20123754362563750000628510422700297606331646630168837548483941456610742295252
        );                                      
        
        vk.IC[34] = Pairing.G1Point( 
            10251208477038860055305090772284708118674093506293331682817308889984709899661,
            11592230728584331301533821884822976264484704264558625922545644310532028644887
        );                                      
        
        vk.IC[35] = Pairing.G1Point( 
            16384951003520420866838936134467676592341927833081705609227248935288214292621,
            19143093838269485809435688841055114992370129734601034807644892496390354615534
        );                                      
        
        vk.IC[36] = Pairing.G1Point( 
            20392447713656287382957275424938456334332439892639243385833232821077123813873,
            19931104044959254214441855762342861130197797545002742749989195264629445773279
        );                                      
        
        vk.IC[37] = Pairing.G1Point( 
            16318370445756131611361707241206896803201661063218321771806827029609429490629,
            3774782324062297214247505363664241003324336845324997628472470260937607285555
        );                                      
        
        vk.IC[38] = Pairing.G1Point( 
            2062205097795369039393229126005681965560890372120914258822843647269763007993,
            9066782856373458150415838863756225945179373988126346643513036602905236930257
        );                                      
        
        vk.IC[39] = Pairing.G1Point( 
            8605489631172876135961812320175263966802777700281661887782802236497912727015,
            10752553274733041533612145105135615307654094637604575645073572825271776475837
        );                                      
        
        vk.IC[40] = Pairing.G1Point( 
            2563709131443459048608335028979175562467309543539445042030453093525899047331,
            8428929284930361444913684376831582089727052468830834689893693984095202443586
        );                                      
        
        vk.IC[41] = Pairing.G1Point( 
            9601949830291308381061428185112711889679820037983371122567571432714126264675,
            11297964199051234071338892442481429341004681880331674389430890070705764180339
        );                                      
        
        vk.IC[42] = Pairing.G1Point( 
            17060543716832559122407815208702488209534366946239087255922368003985591706229,
            19981867448426440857769405881262871659182395363294236277773226766754058746378
        );                                      
        
        vk.IC[43] = Pairing.G1Point( 
            15318551159102609128431386862226114367406049795461084869971133558532948854400,
            8718991212156273381462652815819708014019796041499657180064776609112777308301
        );                                      
        
        vk.IC[44] = Pairing.G1Point( 
            1403487698100965796623850874043418259737518211447197397981839148984301456060,
            10222193813811549831242884321160383463935129470372970769664071557168871096916
        );                                      
        
        vk.IC[45] = Pairing.G1Point( 
            1991292559576684642074121442018810301491763584948538700605121401929858470987,
            16890052524731358833153014991405923828076070934667993752685466734471362961666
        );                                      
        
        vk.IC[46] = Pairing.G1Point( 
            1742531353585639132805294165986113249624154748195172350812491637692117687886,
            3218185857679473998619063966652617629403908003620534330094694431543110331403
        );                                      
        
        vk.IC[47] = Pairing.G1Point( 
            6121982160396267389963454563441818710529851967776460153047455124383239655940,
            11665089068190065956803601133590506890075528065122993623814726596486272921602
        );                                      
        
        vk.IC[48] = Pairing.G1Point( 
            19736258220982652959616794208192003212786159441595473667274360810319896891486,
            9884059062942756800940685730532253174310882526508908863231588996659806193044
        );                                      
        
        vk.IC[49] = Pairing.G1Point( 
            6518881936174972716669521814393008791829845675803920866047241607093859634628,
            15217897625740721574953268900264448454590148563649531720726594817574313609358
        );                                      
        
        vk.IC[50] = Pairing.G1Point( 
            13812758909667545093921572388697713801040761323524410383283777281376398103827,
            12743220322115555556138434041116063226179630762577214269362899782978571193177
        );                                      
        
        vk.IC[51] = Pairing.G1Point( 
            764643722099379800079736464019335402260979788823617181152821987220286863561,
            8682546374371326262552067996690992549234560107621483844627517694306915613849
        );                                      
        
        vk.IC[52] = Pairing.G1Point( 
            3634526547181723828238274420447794955050222511080683159832937368279061631399,
            19757942372354207571574322534515893916029582628127050289165201862265656441719
        );                                      
        
        vk.IC[53] = Pairing.G1Point( 
            21454985846181190852233691758354620712752929676760572420554704774933916083199,
            9007845918912835223365575706888262535454364753242029747930443099722552758708
        );                                      
        
        vk.IC[54] = Pairing.G1Point( 
            3726918252433199597637952762119544239978867061475770104298401537109114239896,
            18504298478422811030911863992761174745122193896226719015234243183341956193931
        );                                      
        
        vk.IC[55] = Pairing.G1Point( 
            18307697855332309088672402828479132557780772656494630404121871869017681130391,
            13599007462728125568990633630663211260060103116123614599926720472705891302382
        );                                      
        
        vk.IC[56] = Pairing.G1Point( 
            11265386793589288965405925542563708110088222306595703803094786270273637570947,
            12452860231981402260801695097483876631267769561010327015678621312748771008991
        );                                      
        
        vk.IC[57] = Pairing.G1Point( 
            8834036696740956413428137384680716718685266467970355979566583203891217522451,
            2672331025869753977629856130090713159165532336609396016247677266007800675052
        );                                      
        
        vk.IC[58] = Pairing.G1Point( 
            13016643553682764550143740110516008209871299490299661933146707068487272205316,
            10051933025514655353229348121921146567519189445980344750814986102533641148603
        );                                      
        
        vk.IC[59] = Pairing.G1Point( 
            10318362791819609525184927933163490604930634853713577103177389692895430584123,
            15775439267239544179138310964998008825264146737723931068410016824240081873339
        );                                      
        
        vk.IC[60] = Pairing.G1Point( 
            20035678800155282848692199765354784474960632178605937684158717577677453408259,
            7289983395628365294248131712997244676919519162306556255952279230803487912997
        );                                      
        
        vk.IC[61] = Pairing.G1Point( 
            10587062780160359836143577100481392538474544985758728170479893376353655858155,
            10321015279180491679298179937310835595694678699669623181159949323225610315804
        );                                      
        
        vk.IC[62] = Pairing.G1Point( 
            4716058266870610674773228971767570082871674797120014580903756260356096429069,
            20742429178214172493028532684004424429338753455094112687549607227437963934238
        );                                      
        
        vk.IC[63] = Pairing.G1Point( 
            18566350282002065784630403081788537030385924053141568570922599703847557315153,
            9639460920053565613644228501250310411735375388182286317376358946093583197773
        );                                      
        
        vk.IC[64] = Pairing.G1Point( 
            20215537449316189171221885081753935609065576208084502335285999221066449200086,
            83790900734024599901953206773620001792046147158549712846241129492331591514
        );                                      
        
        vk.IC[65] = Pairing.G1Point( 
            21532990021353153748038270243309750109576659114957082519868522388910428376744,
            5891787508566329718361499998828419172716291864191919877928703326052756095677
        );                                      
        
        vk.IC[66] = Pairing.G1Point( 
            7168612078118850620842612472581056937927225361466214415525476286715317185648,
            11276717316186235365158372936441154297747095346425580584422877954323066579234
        );                                      
        
        vk.IC[67] = Pairing.G1Point( 
            2339807809648341863697791935461425916912524187428091418087496210455570746857,
            10915570573872443603665081560584406405627576343451357488657619137837192670612
        );                                      
        
        vk.IC[68] = Pairing.G1Point( 
            941879499866587773285541451381477284299311176847931668929690525531367636358,
            19951341081893229970705736275124860430955022611187371509622213404546148146572
        );                                      
        
        vk.IC[69] = Pairing.G1Point( 
            1291188066716420096048692235025377929610889738311169044224169146580078091699,
            17600592005036854884553292361476284379972040984724053173318631081449966778690
        );                                      
        
        vk.IC[70] = Pairing.G1Point( 
            10906126909233465676634731525380543646842115275276694520849357160425622683653,
            10454676030405572649048847714494730112780218363549182466300097031462157412307
        );                                      
        
        vk.IC[71] = Pairing.G1Point( 
            16527467827671567763053324447134691548173065974966655550570909481953014864155,
            10493772220542509871982696007641344123017654819409698021969261986206603868983
        );                                      
        
        vk.IC[72] = Pairing.G1Point( 
            14014260300157790268216575177739387286515470609698814609018646274048535813757,
            4592440274506715095209500814750020678107096800007197014156218345728254336963
        );                                      
        
        vk.IC[73] = Pairing.G1Point( 
            6724982079787019989120045049303585465735942136704328732221581162736341756709,
            13109727506016923175332319355080784554532999739185598600685352765853724765512
        );                                      
        
        vk.IC[74] = Pairing.G1Point( 
            20055059715079011002581580183813271357789207087042310964172990886661270743193,
            11561324967105785018670015653084240493217487655181035098533312976713560030779
        );                                      
        
        vk.IC[75] = Pairing.G1Point( 
            14268120829525817706796377136736054309975295363355332295492334234323747611108,
            1277224964373287426113190134235685516040722923241863322155731351029350289359
        );                                      
        
        vk.IC[76] = Pairing.G1Point( 
            15711905791740684909055593630662999131355805214885309372434265422055697283258,
            13503323981709068591000865165913478063692284432316491612172442970897298167241
        );                                      
        
        vk.IC[77] = Pairing.G1Point( 
            6919750503489335947974017506218218807497802944490459986323595334813506481771,
            4742899434424926247925920607802615735264405451190297145818784471722239917814
        );                                      
        
        vk.IC[78] = Pairing.G1Point( 
            11481530675663999685384008778840509967127199800318095465406192050053473774809,
            7456966789082034432721399746673140647471576792550134825997846928817919411153
        );                                      
        
        vk.IC[79] = Pairing.G1Point( 
            11100593562103559979623768081465450026661523325085103871195308039197658819583,
            19602155989553655341218980212131099737495476399080995150965495249605831312451
        );                                      
        
        vk.IC[80] = Pairing.G1Point( 
            21131635908068066994370386994617636680763949634245960830167673100437723259058,
            1598418094945006077521778342671635404933346616266333288222627870308685527303
        );                                      
        
        vk.IC[81] = Pairing.G1Point( 
            6173112728790483523673208511535574338196843105320993717581110344078216045407,
            13361480625222611159632080042814376133289822210572962725613591670111167990178
        );                                      
        
        vk.IC[82] = Pairing.G1Point( 
            17074987065588465966368530287213009698337239096206944191017581933866336210909,
            1283174095841830227700964918553173206281328725674322426847090793444105082193
        );                                      
        
        vk.IC[83] = Pairing.G1Point( 
            6105069339695017751357196547823703603079406092278829711347126027064626087566,
            274383910562065043923488306431549380987877704492172389582557112780917678169
        );                                      
        
        vk.IC[84] = Pairing.G1Point( 
            12904658724758138373217696683132833611414084696680668932291192022564481468709,
            10259262358399265906435079759542295144450498233815896897846662069481318752052
        );                                      
        
        vk.IC[85] = Pairing.G1Point( 
            21247995496276368168749092355391386481220475863329055546092598013690871113322,
            6669324341427229381517961938637164408686291766643317473111867580138732219027
        );                                      
        
        vk.IC[86] = Pairing.G1Point( 
            14727272442269388929032771868966573282184691949956613822902408132104462546381,
            2305193629652309264899137445948592940464144156576748580145688769676204564915
        );                                      
        
        vk.IC[87] = Pairing.G1Point( 
            9577282611888622617172648333241774804124115937176666554146238926591954923299,
            20799989426549628522807502745985288598058068117340352775328164386342993635255
        );                                      
        
        vk.IC[88] = Pairing.G1Point( 
            630696202766470992034761307864044440039698424178356992289398970624201590526,
            787491221030514272850684218666506246315590009033217391623457692841112024015
        );                                      
        
        vk.IC[89] = Pairing.G1Point( 
            15696083473234399003507006990057228193377983717469947825438556956584640080324,
            2892577597927524478065702344414794988741250889698241627380611651117699025962
        );                                      
        
        vk.IC[90] = Pairing.G1Point( 
            3185843597527999180416436224571688671612295399707285182245376073765022035397,
            8256531293868713460442764853078588612958370198060816031833803774874482863082
        );                                      
        
        vk.IC[91] = Pairing.G1Point( 
            13601192140037676503673926640081037418305551267524660841788170338835394182841,
            12843732443009624739249432396937020247223113774700951248923690136553267961797
        );                                      
        
        vk.IC[92] = Pairing.G1Point( 
            14638856805115614462834139119272526190882119539446698290844785475311176086555,
            15966136735688992874951519918988646572052715047181584062195332817739356381857
        );                                      
        
        vk.IC[93] = Pairing.G1Point( 
            3089339566151366624794413278825686120467568111539982390905569239050635664042,
            9024872879113569844078738914261426107567793822824901800115672871652830532969
        );                                      
        
        vk.IC[94] = Pairing.G1Point( 
            6770362468783298188655406770212098556302532097084616783030113806146211096115,
            9051478885543696973337723998634427459638547198921004245991258131439867290314
        );                                      
        
        vk.IC[95] = Pairing.G1Point( 
            21503957775004838646017941316071513549643828094772122948770372131543045359729,
            18922956476530527979508884978414410750681449988344678816876245984905926554875
        );                                      
        
        vk.IC[96] = Pairing.G1Point( 
            16566600072458139788092178162486850462899748333632186692199010919754575330798,
            11668503463030492161671761414676139473607372723008182647666287182600282154284
        );                                      
        
        vk.IC[97] = Pairing.G1Point( 
            16822954135317398979196139156616995656505433001264484928223987240999116422978,
            12605633555460845215942173208958152637927990283163597724703344907827607293678
        );                                      
        
        vk.IC[98] = Pairing.G1Point( 
            7819953433635116639876440152904426390148240726417035489522578810453049132535,
            13750549448849659708924667231764768235161024256751808894798736968542871695862
        );                                      
        
        vk.IC[99] = Pairing.G1Point( 
            20215911437705398760965966512206393995281625807569971119708870657879172255074,
            10195694741485262515987110244245586715695543335068362941096309770119011550405
        );                                      
        
        vk.IC[100] = Pairing.G1Point( 
            20468775984286644686764932213374207560918919062562160177716769194202330906521,
            8436740237994887624922031786548370198093352384296639576073408631157627011278
        );                                      
        
        vk.IC[101] = Pairing.G1Point( 
            9961562744756682183567742104900304630711876334969205546557624323652817504278,
            2540408253188350223075353122381452046268919449081960954346400742546702953
        );                                      
        
        vk.IC[102] = Pairing.G1Point( 
            14522526796178429891413386303750508334657994553609829058114446822816350904387,
            11406495106047442347541762454967607623718622243201336978968615900786203422624
        );                                      
        
        vk.IC[103] = Pairing.G1Point( 
            9145346676832957523721435728059561600325651515718363791588519349374363015362,
            5465351275362541447010112546663567165948105524154837813858507184159115914874
        );                                      
        
        vk.IC[104] = Pairing.G1Point( 
            18748629579188740308855809964741402527245275558763703173361949433545534258797,
            9024251034360158127169275751069647609672542999398076170935011308559375345666
        );                                      
        
        vk.IC[105] = Pairing.G1Point( 
            12233763305782048313993341036096023258482356210504040494037788927631521098534,
            8260683050660146891041644565245059663655160023268464664220183731067588196899
        );                                      
        
        vk.IC[106] = Pairing.G1Point( 
            12812076308887003025603129081019623569880431980279619971806998543788071504435,
            1118235637438308664656827267490116518098449039359980628996222102544075205805
        );                                      
        
        vk.IC[107] = Pairing.G1Point( 
            10695200369564862803524432408641315213751672877048626225210074813931181772115,
            20825724219830476651398553580186871994445206663591917816549509813994698881059
        );                                      
        
        vk.IC[108] = Pairing.G1Point( 
            9625886619162154313398989329153053225331739935538101852117048818095783975192,
            5997596364642653832022318218585245385793646144917449085384435398235074766393
        );                                      
        
        vk.IC[109] = Pairing.G1Point( 
            21256452751524509303190342300175444724864235736982222267496745633632364266260,
            13553344485132196174162522379244771084189284048875194729362880389105063661806
        );                                      
        
        vk.IC[110] = Pairing.G1Point( 
            8342045235280960661121275239892133249115587184877382263015283968156316901472,
            4856274413510614385787412397936397636426807815253303788884105552861980814990
        );                                      
        
        vk.IC[111] = Pairing.G1Point( 
            13489798869855611497613499205632841045533025251335582919767741787724094200741,
            5995177471614201446048122537831941953759515278794902323508682182306042835654
        );                                      
        
        vk.IC[112] = Pairing.G1Point( 
            5372621831904903333312874150053369030579748493216882334047675681799744911328,
            17031017087319853906458248496475691348319195637945876307350118998896997394812
        );                                      
        
        vk.IC[113] = Pairing.G1Point( 
            13499756907859999523464003686506788964080780334559991572206454516414117051930,
            3313294677496845751162067955388870803448055337226835219099002999019327867394
        );                                      
        
        vk.IC[114] = Pairing.G1Point( 
            16968820580516702461243640868787185451791428885534575063940157549511295790938,
            1869801900065364958434668188129767680373059002877226749269622284144149246265
        );                                      
        
        vk.IC[115] = Pairing.G1Point( 
            6902951968467476236704557522938789177416815204438655637320614726360012984513,
            3183935489333802140482313812023752940599307608695050690987699536341386851979
        );                                      
        
        vk.IC[116] = Pairing.G1Point( 
            12397361451627526899571845088555696950960736148806632561067693244632255432467,
            15830168621533253085667503619291398975977091996833590507208670811949869269546
        );                                      
        
        vk.IC[117] = Pairing.G1Point( 
            15889012482693585464027912522645966637633982001674865275029177770878471380774,
            16906784360415186738770298405198551912048414355305646458267807931626646389950
        );                                      
        
        vk.IC[118] = Pairing.G1Point( 
            9151383851570949279385094078131121516635647245052180700562448466684868060341,
            1937553397783597860942422393180232184975346648143611792152340024681581120307
        );                                      
        
        vk.IC[119] = Pairing.G1Point( 
            3233027307523619433950491963346580695160079205998247411814388645532271184618,
            18202930968488261417793172492595827232648301947117951215770068635719417942131
        );                                      
        
        vk.IC[120] = Pairing.G1Point( 
            2183555557926269964062672449729934690509596301155308963687499445172145123911,
            3444548859846881846559936793175840355663817710833736905938663638322297220960
        );                                      
        
        vk.IC[121] = Pairing.G1Point( 
            20522630222964816729187061843748675215315929432328361671277638643190105208601,
            20960449812993718261685602292011615516857161673251692865634074261111101727286
        );                                      
        
        vk.IC[122] = Pairing.G1Point( 
            7258124357095766305114166284285239984812107817483864968224463275586102052151,
            13761133190511611683810211478091344043264806350790041166364412321734221050421
        );                                      
        
        vk.IC[123] = Pairing.G1Point( 
            5998806443255723556520953709646544395185471815448406258383222243600454454685,
            9678423488103512059927223688026041771401177206497002594572636159836967662394
        );                                      
        
        vk.IC[124] = Pairing.G1Point( 
            5515070432952228057272414807272775918629731182318808751488555650437494684441,
            21595296856783759836480081746853088964571981916120196133492892692434584012524
        );                                      
        
        vk.IC[125] = Pairing.G1Point( 
            11105071153318384383065380501040920158134047568245124554105682710924605972330,
            5266208141545297988943790539260038739073815045837142915671800673161354145129
        );                                      
        
        vk.IC[126] = Pairing.G1Point( 
            2610385650948938041052333210843121456723940950502257687008211606010507624981,
            2135605960116405789869207299702293487661683853819487032742633127346936387501
        );                                      
        
        vk.IC[127] = Pairing.G1Point( 
            3161363405218689739231231944895508361868704492900694467760600297224882048780,
            6631402682745826992236634926894635854170882531156738735711888512711260953980
        );                                      
        
        vk.IC[128] = Pairing.G1Point( 
            11930212391230938319809050834900579832279184473056997203743274228347941590642,
            13004219078494927533105716807647185762894063907160392777144960223111365494678
        );                                      
        
    }
    function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        VerifyingKey memory vk = verifyingKey();
        require(input.length + 1 == vk.IC.length,"verifier-bad-input");
        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        for (uint i = 0; i < input.length; i++) {
            require(input[i] < snark_scalar_field,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));
        }
        vk_x = Pairing.addition(vk_x, vk.IC[0]);
        if (!Pairing.pairingProd4(
            Pairing.negate(proof.A), proof.B,
            vk.alfa1, vk.beta2,
            vk_x, vk.gamma2,
            proof.C, vk.delta2
        )) return 1;
        return 0;
    }
    /// @return r  bool true if proof is valid
    function verifyProof(
            uint[2] memory a,
            uint[2][2] memory b,
            uint[2] memory c,
            uint[128] memory input
        ) public view returns (bool r) {
        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);
        uint[] memory inputValues = new uint[](input.length);
        for(uint i = 0; i < input.length; i++){
            inputValues[i] = input[i];
        }
        if (verify(inputValues, proof) == 0) {
            return true;
        } else {
            return false;
        }
    }
}
