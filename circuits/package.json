{
  "name": "circuits",
  "version": "1.0.0",
  "main": "utils/index.ts",
  "license": "MIT",
  "types": "utils/index.ts",
  "devDependencies": {
    "@types/chai": "^4.3.11",
    "@types/jest": "^29.5.11",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.11.0",
    "chai": "4.3.10",
    "circom_tester": "^0.0.20",
    "circomlib": "^2.0.5",
    "mocha": "^10.2.0"
  },
  "scripts": {
    "test": "mocha -r ts-node/register 'test/**/*.ts'",
    "compile": "circom circuits/zkube.circom --r1cs --sym --wasm -o zk/ ",
    "setup:sample-zkey": "snarkjs groth16 setup zk/zkube.r1cs powersOfTau28_hez_final_15.ptau zk/zkube.zkey",
    "contribute:deterministic": "snarkjs zkey beacon ./zk/zkube.zkey ./zk/zkube_final.zkey CAFE 10 -n='Final Beacon phase2'",
    "generate:verifier": "./generateSolidityVerifier.sh",
    "generate:input": "ts-node -e \"import { generateCircuitInput } from './utils/generateCircuitInput'; generateCircuitInput();\"",
    "generate:calldata": "ts-node -e \"import { exportCalldataGroth16Invoke } from './utils/exportCalldataGroth16Invoke'; exportCalldataGroth16Invoke();\"",
    "build:dev": "yarn compile && yarn setup:sample-zkey && yarn contribute:deterministic && yarn generate:verifier",
    "generate:proof": "yarn generate:input && yarn generate:calldata",
    "export:elements": "cp ./zk/ZKubeVerifier.sol ../contracts/src && cp ./zk/zkube_proof.json ../contracts/test/zkube_proof.json && cp ./zk/zkube_final.zkey ./zk/zkube_js/zkube.wasm ../app/public/zk",
    "build:dev:all": "yarn build:dev && yarn generate:proof && yarn export:elements"
  }
}
